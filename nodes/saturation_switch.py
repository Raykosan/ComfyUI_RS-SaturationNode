import torch
from comfy.model_patcher import ModelPatcher

class RS_SaturationSwitch:
    @classmethod
    def INPUT_TYPES(cls):
        return {
            "required": {
                "image": ("IMAGE",),
                "intensity": ("FLOAT", {
                    "default": 1.0,
                    "min": 0.0,
                    "max": 3.0,
                    "step": 0.05,  # –®–∞–≥ –∏–∑–º–µ–Ω–µ–Ω–∏—è 0.05
                    "display_name": "Intensity",
                    "description": "0.0=Grayscale, 1.0=Original, 1.5=Subtle Boost"
                }),
            },
        }
    
    RETURN_TYPES = ("IMAGE",)
    FUNCTION = "apply_saturation"
    CATEGORY = "ü¶ä RaykoStudio/Image"
    DESCRIPTION = "Artifact-free saturation control with proper tensor handling"

    def apply_saturation(self, image, intensity):
        if intensity == 1.0:
            return (image,)
            
        # –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é —Å —è–≤–Ω—ã–º —É–∫–∞–∑–∞–Ω–∏–µ–º —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç–∏
        img = image.clone().float()  # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ float32 –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º luminance (—è—Ä–∫–æ—Å—Ç—å)
        r, g, b = img[..., 0], img[..., 1], img[..., 2]
        l = 0.299 * r + 0.587 * g + 0.114 * b
        l = l.unsqueeze(-1)  # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å –∫–∞–Ω–∞–ª–∞
        
        # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç–∏
        if intensity < 1.0:
            # –î–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –Ω–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç–∏ - –ª–∏–Ω–µ–π–Ω–∞—è –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—è
            result = l + intensity * (img - l)
        else:
            # –î–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è - –Ω–µ–ª–∏–Ω–µ–π–Ω–æ–µ —É—Å–∏–ª–µ–Ω–∏–µ —Å –∑–∞—â–∏—Ç–æ–π
            boost = 1.0 + (intensity - 1.0) * 0.7  # –ú—è–≥–∫–æ–µ —É—Å–∏–ª–µ–Ω–∏–µ
            delta = img - l
            result = l + boost * delta
            
            # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
            result = torch.where(
                (result < 0) | (result > 1),
                l + 0.9 * delta,  # –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç
                result
            )
        
        # –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç–∏
        if result.dim() == 3:
            result = result.unsqueeze(0)
            
        return (result.clamp(0, 1).to(image.dtype),)

NODE_CLASS_MAPPINGS = {"RS_SaturationSwitch": RS_SaturationSwitch}
NODE_DISPLAY_NAME_MAPPINGS = {"RS_SaturationSwitch": "ü¶ä RS Safe Saturation"}